basePath: /
definitions:
  models.Session:
    properties:
      access_expires_at:
        type: string
      access_token:
        type: string
      created_at:
        type: string
      id:
        type: string
      last_activity:
        type: string
      refresh_expires_at:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      email_hash:
        type: string
      id:
        type: string
      last_name:
        type: string
      mfa_enabled:
        type: boolean
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      phone_number_hash:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  services.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  services.UserInput:
    properties:
      email:
        type: string
      last_name:
        type: string
      mfa_enabled:
        type: boolean
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Authentication and Authorization API
  title: Auth API
  version: "1.0"
paths:
  /api/login:
    post:
      consumes:
      - application/json
      description: Log into a user account
      parameters:
      - description: Login Input
        in: body
        name: user
        schema:
          $ref: '#/definitions/services.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: successfully logged in
          schema:
            type: string
      summary: Login
      tags:
      - login
  /api/logout:
    post:
      consumes:
      - application/json
      description: Logout of a user account
      produces:
      - application/json
      responses:
        "200":
          description: successfully logged out
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Logout
      tags:
      - login
  /api/session:
    post:
      consumes:
      - application/json
      description: Create a new session for a user
      parameters:
      - description: User ID
        in: body
        name: user_id
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Session'
      summary: Create session
      tags:
      - sessions
  /api/session/{token}:
    delete:
      consumes:
      - application/json
      description: Invalidate a session using its access token
      parameters:
      - description: Access Token
        in: path
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: session invalidated
          schema:
            type: string
      summary: Invalidate session
      tags:
      - sessions
  /api/session/refresh:
    post:
      consumes:
      - application/json
      description: Get new access and refresh tokens using a refresh token
      parameters:
      - description: Refresh Token
        in: body
        name: refresh_token
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Session'
      summary: Refresh access token
      tags:
      - sessions
  /api/session/validate:
    get:
      consumes:
      - application/json
      description: Validate an access token and return session info
      parameters:
      - description: Access Token
        in: header
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Session'
      summary: Validate access token
      tags:
      - sessions
  /api/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User input data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/services.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by ID
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: Checks health of server
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health check
      tags:
      - health
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
