basePath: /
definitions:
  models.User:
    properties:
      email:
        type: string
      id:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  services.UserInput:
    properties:
      email:
        type: string
      last_name:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Authentication and Authorization API
  title: Auth API
  version: "1.0"
paths:
  /api/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User input data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/services.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            type: string
      summary: Create user
      tags:
      - users
  /api/user/{id}:
    get:
      consumes:
      - application/json
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by ID
      tags:
      - users
  /api/user/validate:
    get:
      consumes:
      - application/json
      description: Test validates a password
      parameters:
      - description: Initial Password
        in: query
        name: initialPassword
        required: true
        type: string
      - description: Second Hash
        in: query
        name: secondHash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Validate password
      tags:
      - users
  /health:
    get:
      consumes:
      - application/json
      description: Checks health of server
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
      summary: Health check
      tags:
      - health
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
